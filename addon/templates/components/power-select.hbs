{{#basic-power-select
  onchange=(action onchange)
  horizontalPosition=(readonly horizontalPosition)
  calculatePosition=calculatePosition
  destination=(readonly destination)
  initiallyOpened=(readonly initiallyOpened)
  matchTriggerWidth=(readonly matchTriggerWidth)
  renderInPlace=(readonly renderInPlace)
  verticalPosition=(readonly verticalPosition)
  disabled=(readonly disabled)
  as |select|
}}
  {{#select.dropdown.trigger
    tagName=(readonly _triggerTagName)
    ariaDescribedBy=(readonly ariaDescribedBy)
    ariaInvalid=(readonly ariaInvalid)
    ariaLabel=(readonly ariaLabel)
    ariaLabelledBy=(readonly ariaLabelledBy)
    ariaRequired=(readonly required)
    class=(readonly concatenatedTriggerClasses)
    id=(readonly triggerId)
    tabindex=(readonly tabindex)
  }}
    {{#select.trigger
      allowClear=(readonly allowClear)
      buildSelection=(readonly buildSelection)
      extra=(readonly extra)
      listboxId=(readonly optionsId)
      placeholder=(readonly placeholder)
      placeholderComponent=(readonly placeholderComponent)
      searchEnabled=(readonly searchEnabled)
      searchField=(readonly searchField)
      select=(readonly publicAPI)
      selectedItemComponent=(readonly selectedItemComponent)
    as |opt term|}}
      {{yield opt term}}
    {{/select.trigger}}
  {{/select.dropdown.trigger}}
  {{#select.dropdown.content}}
    {{select.before-options
      extra=(readonly extra)
      listboxId=(readonly optionsId)
      searchEnabled=(readonly searchEnabled)
      searchPlaceholder=(readonly searchPlaceholder)
      select=(readonly publicAPI)
    }}
    {{#if mustShowSearchMessage}}
      {{component searchMessageComponent
        searchMessage=(readonly searchMessage)
        select=(readonly publicAPI)
      }}
    {{else if mustShowNoMessages}}
      {{#if (hasBlock "inverse")}}
        {{yield to="inverse"}}
      {{else if noMatchesMessage}}
        <ul class="ember-power-select-options" role="listbox">
          <li class="ember-power-select-option ember-power-select-option--no-matches-message" role="option">
            {{noMatchesMessage}}
          </li>
        </ul>
      {{/if}}
    {{else}}
      {{#select.options
        class="ember-power-select-options"
        extra=(readonly extra)
        groupIndex=""
        loadingMessage=(readonly loadingMessage)
        id=(readonly optionsId)
        options=(readonly publicAPI.results)
        optionsComponent=(readonly optionsComponent)
        groupComponent=(readonly groupComponent)
        select=(readonly publicAPI)
      as |opt term|}}
        {{yield opt term}}
      {{/select.options}}
    {{/if}}
    {{select.after-options select=(readonly publicAPI) extra=(readonly extra)}}

  {{/select.dropdown.content}}
{{/basic-power-select}}
